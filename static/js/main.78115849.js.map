{"version":3,"file":"static/js/main.78115849.js","mappings":"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","sources":["src/styles/globalStyles.js","src/services/storageService.js","src/services/dbInterface.js","src/screens/MainMenuScreenWeb.js","src/screens/PlayersScreenWeb.js","src/screens/PlayerSelectionScreenWeb.js","src/components/NumpadModal.js","src/screens/GameScreenWeb.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\nexport const colors = {\n  primary: '#FF6B35',      // Dragon orange\n  secondary: '#F7931E',    // Golden orange\n  accent: '#FFB84D',       // Light orange\n  success: '#4CAF50',      // Green\n  warning: '#FF9800',      // Orange\n  danger: '#F44336',       // Red\n  background: '#FFF3E0',   // Light cream\n  surface: '#FFFFFF',      // White\n  text: '#2C3E50',         // Dark blue-gray\n  textLight: '#7F8C8D',    // Light gray\n  border: '#E0E0E0',       // Light border\n  shadow: '#000000',       // Shadow\n  dragon: {\n    fire: '#FF4444',       // Fire red\n    scale: '#228B22',      // Scale green\n    gold: '#FFD700',       // Gold\n    purple: '#8A2BE2',     // Purple\n  }\n};\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding: {\n    padding: 20,\n    paddingTop: 80, // Extra top padding for status bar area and notch\n  },\n  margin: {\n    margin: 10,\n  },\n  shadow: {\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  card: {\n    backgroundColor: colors.surface,\n    borderRadius: 15,\n    padding: 20,\n    marginVertical: 10,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    borderRadius: 25,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    alignItems: 'center',\n    marginVertical: 10,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  buttonText: {\n    color: colors.surface,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  secondaryButton: {\n    backgroundColor: colors.secondary,\n    borderRadius: 25,\n    paddingVertical: 12,\n    paddingHorizontal: 25,\n    alignItems: 'center',\n    marginVertical: 8,\n  },\n  outlineButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 2,\n    borderColor: colors.primary,\n    borderRadius: 25,\n    paddingVertical: 12,\n    paddingHorizontal: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  outlineButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '300',\n    color: 'rgba(255, 255, 255, 0.7)',\n    textAlign: 'center',\n    marginBottom: 30,\n    marginTop: 10,\n  },\n  subtitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 15,\n  },\n  text: {\n    fontSize: 16,\n    color: colors.text,\n    lineHeight: 24,\n  },\n  textInput: {\n    backgroundColor: colors.surface,\n    borderRadius: 10,\n    padding: 15,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: colors.border,\n    marginVertical: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  flex1: {\n    flex: 1,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n  textBold: {\n    fontWeight: 'bold',\n  },\n  marginTop: {\n    marginTop: 20,\n  },\n  marginBottom: {\n    marginBottom: 20,\n  },\n});\n\nexport const dragonGradients = {\n  fire: ['#FF6B35', '#FF4444'],\n  gold: ['#FFD700', '#F7931E'],\n  green: ['#228B22', '#32CD32'],\n  purple: ['#8A2BE2', '#9932CC'],\n  ocean: ['#1E90FF', '#00CED1'],\n};\n","import { Platform } from 'react-native';\n\nlet storage;\n\nif (Platform.OS === 'web') {\n  // Web storage using localStorage\n  storage = {\n    setItem: async (key, value) => {\n      try {\n        localStorage.setItem(key, value);\n      } catch (error) {\n        console.error('localStorage error:', error);\n      }\n    },\n    getItem: async (key) => {\n      try {\n        return localStorage.getItem(key);\n      } catch (error) {\n        console.error('localStorage error:', error);\n        return null;\n      }\n    },\n    removeItem: async (key) => {\n      try {\n        localStorage.removeItem(key);\n      } catch (error) {\n        console.error('localStorage error:', error);\n      }\n    }\n  };\n} else {\n  // Native storage using AsyncStorage\n  const AsyncStorage = require('@react-native-async-storage/async-storage').default;\n  storage = AsyncStorage;\n}\n\nexport default storage;\n","import { Platform } from 'react-native';\n\n// Import based on platform\nlet nativeDb;\nif (Platform.OS !== 'web') {\n  nativeDb = require('./database');\n}\n\n// Web database implementation\nimport storage from './storageService';\n\nconst PLAYERS_KEY = 'smoki_players';\nconst GAMES_KEY = 'smoki_games';\nconst GAME_ROUNDS_KEY = 'smoki_game_rounds';\n\n// Web implementation functions\nconst webGetPlayers = async () => {\n  try {\n    const players = await storage.getItem(PLAYERS_KEY);\n    return players ? JSON.parse(players) : [];\n  } catch (error) {\n    console.error('Error getting players:', error);\n    return [];\n  }\n};\n\nconst webGetGames = async () => {\n  try {\n    const games = await storage.getItem(GAMES_KEY);\n    return games ? JSON.parse(games) : [];\n  } catch (error) {\n    console.error('Error getting games:', error);\n    return [];\n  }\n};\n\nconst webGetGameRounds = async () => {\n  try {\n    const rounds = await storage.getItem(GAME_ROUNDS_KEY);\n    return rounds ? JSON.parse(rounds) : [];\n  } catch (error) {\n    console.error('Error getting game rounds:', error);\n    return [];\n  }\n};\n\n// Universal database interface\nexport const initDatabase = async () => {\n  if (Platform.OS === 'web') {\n    try {\n      // Initialize empty arrays if they don't exist\n      const players = await webGetPlayers();\n      const games = await webGetGames();\n      const gameRounds = await webGetGameRounds();\n      \n      if (!players || players.length === undefined) await storage.setItem(PLAYERS_KEY, JSON.stringify([]));\n      if (!games || games.length === undefined) await storage.setItem(GAMES_KEY, JSON.stringify([]));\n      if (!gameRounds || gameRounds.length === undefined) await storage.setItem(GAME_ROUNDS_KEY, JSON.stringify([]));\n      \n      return Promise.resolve();\n    } catch (error) {\n      console.error('Error initializing web database:', error);\n      return Promise.resolve(); // Don't fail, just continue\n    }\n  } else {\n    return nativeDb.initDatabase();\n  }\n};\n\nexport const addPlayer = async (name) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const newPlayer = {\n        id: Date.now(), // Simple ID generation\n        name,\n        totalGames: 0,\n        firstPlace: 0,\n        secondPlace: 0,\n        thirdPlace: 0\n      };\n      \n      // Check if player already exists\n      if (players.find(p => p.name === name)) {\n        throw new Error('Player already exists');\n      }\n      \n      players.push(newPlayer);\n      await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n      return newPlayer.id;\n    } catch (error) {\n      console.error('Error adding player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.addPlayer(name);\n  }\n};\n\nexport const getAllPlayers = async () => {\n  if (Platform.OS === 'web') {\n    return await webGetPlayers();\n  } else {\n    return nativeDb.getAllPlayers();\n  }\n};\n\nexport const updatePlayer = async (id, name) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const playerIndex = players.findIndex(p => p.id === id);\n      if (playerIndex !== -1) {\n        players[playerIndex].name = name;\n        await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updatePlayer(id, name);\n  }\n};\n\nexport const deletePlayer = async (id) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const filteredPlayers = players.filter(p => p.id !== id);\n      await storage.setItem(PLAYERS_KEY, JSON.stringify(filteredPlayers));\n      return { success: true };\n    } catch (error) {\n      console.error('Error deleting player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.deletePlayer(id);\n  }\n};\n\nexport const updatePlayerStats = async (playerId, place) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const playerIndex = players.findIndex(p => p.id === playerId);\n      if (playerIndex !== -1) {\n        players[playerIndex].totalGames += 1;\n        if (place === 1) players[playerIndex].firstPlace += 1;\n        else if (place === 2) players[playerIndex].secondPlace += 1;\n        else if (place === 3) players[playerIndex].thirdPlace += 1;\n        \n        await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating player stats:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updatePlayerStats(playerId, place);\n  }\n};\n\nexport const saveGame = async (players, currentState, isCompleted = false) => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      \n      // Remove any existing incomplete games first\n      const completedGames = games.filter(game => game.isCompleted === 1);\n      \n      const newGame = {\n        id: Date.now(),\n        players: JSON.stringify(players),\n        currentState: JSON.stringify(currentState),\n        isCompleted: isCompleted ? 1 : 0,\n        createdAt: new Date().toISOString()\n      };\n      \n      completedGames.push(newGame);\n      await storage.setItem(GAMES_KEY, JSON.stringify(completedGames));\n      return newGame.id;\n    } catch (error) {\n      console.error('Error saving game:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.saveGame(players, currentState, isCompleted);\n  }\n};\n\nexport const updateGame = async (gameId, currentState, isCompleted = false) => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      const gameIndex = games.findIndex(g => g.id === gameId);\n      \n      if (gameIndex !== -1) {\n        // Update both the players and currentState to keep them in sync\n        games[gameIndex].players = JSON.stringify(currentState.players);\n        games[gameIndex].currentState = JSON.stringify(currentState);\n        games[gameIndex].isCompleted = isCompleted ? 1 : 0;\n        await storage.setItem(GAMES_KEY, JSON.stringify(games));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating game:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updateGame(gameId, currentState, isCompleted);\n  }\n};\n\nexport const getActiveGame = async () => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      const activeGame = games.find(game => game.isCompleted === 0);\n      if (activeGame) {\n        return {\n          ...activeGame,\n          players: JSON.parse(activeGame.players),\n          currentState: JSON.parse(activeGame.currentState)\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting active game:', error);\n      return null;\n    }\n  } else {\n    return nativeDb.getActiveGame();\n  }\n};\n\nexport const addGameRound = async (gameId, roundNumber, playerScores) => {\n  if (Platform.OS === 'web') {\n    try {\n      const rounds = await webGetGameRounds();\n      const newRound = {\n        id: Date.now(),\n        gameId,\n        roundNumber,\n        playerScores: JSON.stringify(playerScores)\n      };\n      \n      rounds.push(newRound);\n      await storage.setItem(GAME_ROUNDS_KEY, JSON.stringify(rounds));\n      return { success: true };\n    } catch (error) {\n      console.error('Error adding game round:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.addGameRound(gameId, roundNumber, playerScores);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { initDatabase, getActiveGame } from '../services/dbInterface';\n\nconst MainMenuScreenWeb = ({ navigation }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasActiveGame, setHasActiveGame] = useState(false);\n  const [activeGameData, setActiveGameData] = useState(null);\n\n  useEffect(() => {\n    initializeApp();\n  }, []);\n\n  useEffect(() => {\n    // Check for active game every time screen comes into focus\n    const focusHandler = () => {\n      checkForActiveGame();\n    };\n\n    // For web, we can use visibility change or just call it when component updates\n    focusHandler();\n    \n    // Set up interval to check periodically (optional)\n    const interval = setInterval(checkForActiveGame, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const initializeApp = async () => {\n    try {\n      console.log('Initializing app...');\n      await initDatabase();\n      console.log('Database initialized successfully');\n      await checkForActiveGame();\n      console.log('Active game check completed');\n    } catch (error) {\n      console.error('Error initializing app:', error);\n      // Don't block the UI, just log the error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const checkForActiveGame = async () => {\n    try {\n      const activeGame = await getActiveGame();\n      if (activeGame) {\n        setHasActiveGame(true);\n        setActiveGameData(activeGame);\n      } else {\n        setHasActiveGame(false);\n        setActiveGameData(null);\n      }\n    } catch (error) {\n      console.error('Error checking for active game:', error);\n      setHasActiveGame(false);\n      setActiveGameData(null);\n    }\n  };\n\n  const resumeGame = () => {\n    if (activeGameData) {\n      const gameData = {\n        id: activeGameData.id,\n        players: activeGameData.players, // This should already have the scores and rounds\n        currentRound: activeGameData.currentState.currentRound || 1\n      };\n      navigation.navigate('Game', { gameData, resumeGame: true });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.primary }]}>\n        <Text style={{ fontSize: 24, color: 'white' }}>\n          🐉 Ładowanie Smoki...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[\n      globalStyles.container, \n      globalStyles.centered, \n      { \n        backgroundColor: colors.primary,\n        overflow: 'hidden' // Prevent scrolling on web\n      }\n    ]}>\n      <Text style={{ \n        fontSize: 48, \n        fontWeight: 'bold', \n        color: 'white', \n        marginBottom: 20,\n        textAlign: 'center'\n      }}>\n        🐉 SMOKI\n      </Text>\n      \n      <Text style={{ \n        fontSize: 18, \n        color: 'white', \n        marginBottom: 40,\n        textAlign: 'center'\n      }}>\n        by Maślak\n      </Text>\n\n      {hasActiveGame && (\n        <TouchableOpacity\n          style={{\n            backgroundColor: colors.success,\n            padding: 15,\n            borderRadius: 10,\n            marginVertical: 10,\n            minWidth: 200,\n            alignItems: 'center'\n          }}\n          onPress={resumeGame}\n        >\n          <Text style={{ fontSize: 18, color: 'white', fontWeight: 'bold' }}>\n            ▶️ Kontynuuj grę\n          </Text>\n        </TouchableOpacity>\n      )}\n\n      <TouchableOpacity\n        style={{\n          backgroundColor: 'white',\n          padding: 15,\n          borderRadius: 10,\n          marginVertical: 10,\n          minWidth: 200,\n          alignItems: 'center'\n        }}\n        onPress={() => {\n          navigation.navigate('Players');\n        }}\n      >\n        <Text style={{ fontSize: 18, color: colors.primary, fontWeight: 'bold' }}>\n          👥 Gracze\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={{\n          backgroundColor: 'white',\n          padding: 15,\n          borderRadius: 10,\n          marginVertical: 10,\n          minWidth: 200,\n          alignItems: 'center'\n        }}\n        onPress={() => {\n          navigation.navigate('PlayerSelection');\n        }}\n      >\n        <Text style={{ fontSize: 18, color: colors.primary, fontWeight: 'bold' }}>\n          🎮 Nowa Gra\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default MainMenuScreenWeb;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform, TextInput, Modal, ScrollView } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { getAllPlayers, addPlayer, updatePlayer, deletePlayer } from '../services/dbInterface';\n\nconst PlayersScreenWeb = ({ navigation }) => {\n  const [players, setPlayers] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [editingPlayer, setEditingPlayer] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadPlayers();\n  }, []);\n\n  const loadPlayers = async () => {\n    try {\n      setIsLoading(true);\n      const playersData = await getAllPlayers();\n      // Sort players by best performance: 1st place first, then 2nd place, then 3rd place, then total games\n      const sortedPlayers = (playersData || []).sort((a, b) => {\n        // Compare by first place count (descending)\n        if (a.firstPlace !== b.firstPlace) {\n          return b.firstPlace - a.firstPlace;\n        }\n        // If same first places, compare by second place count (descending)\n        if (a.secondPlace !== b.secondPlace) {\n          return b.secondPlace - a.secondPlace;\n        }\n        // If same second places, compare by third place count (descending)\n        if (a.thirdPlace !== b.thirdPlace) {\n          return b.thirdPlace - a.thirdPlace;\n        }\n        // If all places are equal, compare by total games (descending)\n        return b.totalGames - a.totalGames;\n      });\n      setPlayers(sortedPlayers);\n    } catch (error) {\n      console.error('Error loading players:', error);\n      setPlayers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddPlayer = async () => {\n    if (!playerName.trim()) return;\n\n    try {\n      if (editingPlayer) {\n        await updatePlayer(editingPlayer.id, playerName.trim());\n      } else {\n        await addPlayer(playerName.trim());\n      }\n      await loadPlayers();\n      setModalVisible(false);\n      setPlayerName('');\n      setEditingPlayer(null);\n    } catch (error) {\n      console.error('Error saving player:', error);\n      if (Platform.OS === 'web') {\n        alert('Błąd: ' + error.message);\n      }\n    }\n  };\n\n  const handleEditPlayer = (player) => {\n    setEditingPlayer(player);\n    setPlayerName(player.name);\n    setModalVisible(true);\n  };\n\n  const handleDeletePlayer = async (playerId) => {\n    if (Platform.OS === 'web') {\n      if (!confirm('Czy na pewno chcesz usunąć tego gracza?')) return;\n    }\n\n    try {\n      await deletePlayer(playerId);\n      await loadPlayers();\n    } catch (error) {\n      console.error('Error deleting player:', error);\n    }\n  };\n\n  const renderPlayer = (player) => (\n    <View key={player.id} style={styles.playerCard}>\n      <View style={styles.playerInfo}>\n        <Text style={styles.playerName}>{player.name}</Text>\n        <Text style={styles.playerStats}>\n          🏆 {player.firstPlace} 🥈 {player.secondPlace} 🥉 {player.thirdPlace} | Gry: {player.totalGames}\n        </Text>\n      </View>\n      \n      <View style={styles.playerActions}>\n        <TouchableOpacity \n          style={[styles.actionButton, { backgroundColor: colors.warning }]}\n          onPress={() => handleEditPlayer(player)}\n        >\n          <Text style={styles.actionButtonText}>✏️</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[styles.actionButton, { backgroundColor: colors.danger }]}\n          onPress={() => handleDeletePlayer(player.id)}\n        >\n          <Text style={styles.actionButtonText}>🗑️</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.background }]}>\n        <Text style={{ fontSize: 24, color: colors.text }}>\n          Ładowanie graczy...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={navigation.goBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <Text style={styles.title}>👥 Gracze</Text>\n        \n        <TouchableOpacity \n          onPress={() => setModalVisible(true)}\n          style={styles.addButton}\n        >\n          <Text style={styles.addButtonText}>+ Dodaj</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Players List */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {players.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Text style={styles.emptyStateText}>\n              Brak graczy. Dodaj pierwszego gracza!\n            </Text>\n          </View>\n        ) : (\n          players.map(renderPlayer)\n        )}\n      </ScrollView>\n\n      {/* Add/Edit Player Modal */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              {editingPlayer ? 'Edytuj gracza' : 'Dodaj gracza'}\n            </Text>\n            \n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Imię gracza\"\n              value={playerName}\n              onChangeText={setPlayerName}\n              autoFocus={true}\n            />\n            \n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.textLight }]}\n                onPress={() => {\n                  setModalVisible(false);\n                  setPlayerName('');\n                  setEditingPlayer(null);\n                }}\n              >\n                <Text style={styles.modalButtonText}>Anuluj</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.primary }]}\n                onPress={handleAddPlayer}\n              >\n                <Text style={[styles.modalButtonText, { color: 'white' }]}>\n                  {editingPlayer ? 'Zapisz' : 'Dodaj'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: colors.primary,\n  },\n  backButton: {\n    padding: 10,\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  addButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  addButtonText: {\n    color: colors.primary,\n    fontWeight: 'bold',\n  },\n  playersList: {\n    flex: 1,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  playerInfo: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 5,\n  },\n  playerStats: {\n    fontSize: 14,\n    color: colors.textLight,\n  },\n  playerActions: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n  actionButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  actionButtonText: {\n    fontSize: 16,\n  },\n  emptyState: {\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: colors.textLight,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 30,\n    width: '80%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n    color: colors.text,\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: colors.border,\n    borderRadius: 10,\n    padding: 15,\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default PlayersScreenWeb;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { getAllPlayers } from '../services/dbInterface';\n\nconst PlayerSelectionScreenWeb = ({ navigation }) => {\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadPlayers();\n  }, []);\n\n  const loadPlayers = async () => {\n    try {\n      setIsLoading(true);\n      const playersData = await getAllPlayers();\n      setPlayers(playersData || []);\n    } catch (error) {\n      console.error('Error loading players:', error);\n      setPlayers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const togglePlayerSelection = (player) => {\n    const isSelected = selectedPlayers.find(p => p.id === player.id);\n    \n    if (isSelected) {\n      setSelectedPlayers(selectedPlayers.filter(p => p.id !== player.id));\n    } else {\n      if (selectedPlayers.length < 6) { // Max 6 players\n        setSelectedPlayers([...selectedPlayers, player]);\n      } else {\n        if (Platform.OS === 'web') {\n          alert('Maksymalnie 6 graczy może brać udział w grze!');\n        }\n      }\n    }\n  };\n\n  const startGame = () => {\n    if (selectedPlayers.length < 2) {\n      if (Platform.OS === 'web') {\n        alert('Wybierz co najmniej 2 graczy!');\n      }\n      return;\n    }\n\n    // Go directly to game with selected players\n    navigation.navigate('Game', { selectedPlayers });\n  };\n\n  const renderPlayer = (player) => {\n    const isSelected = selectedPlayers.find(p => p.id === player.id);\n    \n    return (\n      <TouchableOpacity\n        key={player.id}\n        style={[\n          styles.playerCard,\n          isSelected && styles.selectedPlayerCard\n        ]}\n        onPress={() => togglePlayerSelection(player)}\n      >\n        <View style={styles.playerInfo}>\n          <Text style={[\n            styles.playerName,\n            isSelected && styles.selectedPlayerName\n          ]}>\n            {player.name}\n          </Text>\n          <Text style={[\n            styles.playerStats,\n            isSelected && styles.selectedPlayerStats\n          ]}>\n            🏆 {player.firstPlace} 🥈 {player.secondPlace} 🥉 {player.thirdPlace} | Gry: {player.totalGames}\n          </Text>\n        </View>\n        \n        <View style={[\n          styles.selectionIndicator,\n          isSelected && styles.selectedIndicator\n        ]}>\n          <Text style={styles.selectionText}>\n            {isSelected ? '✓' : '○'}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.background }]}>\n        <Text style={{ fontSize: 24, color: colors.text }}>\n          Ładowanie graczy...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={navigation.goBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <Text style={styles.title}>🎮 Wybierz Graczy</Text>\n        \n        <View style={styles.counterContainer}>\n          <Text style={styles.counterText}>{selectedPlayers.length}/6</Text>\n        </View>\n      </View>\n\n      {/* Players List */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {players.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Text style={styles.emptyStateText}>\n              Brak graczy. Dodaj graczy w sekcji \"Gracze\" przed rozpoczęciem gry!\n            </Text>\n            <TouchableOpacity \n              style={styles.addPlayersButton}\n              onPress={() => navigation.navigate('Players')}\n            >\n              <Text style={styles.addPlayersButtonText}>👥 Dodaj Graczy</Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          players.map(renderPlayer)\n        )}\n      </ScrollView>\n\n      {/* Start Game Button */}\n      {selectedPlayers.length >= 2 && (\n        <View style={styles.startButtonContainer}>\n          <TouchableOpacity \n            style={styles.startButton}\n            onPress={startGame}\n          >\n            <Text style={styles.startButtonText}>\n              🎮 Rozpocznij grę ({selectedPlayers.length} graczy)\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: colors.primary,\n  },\n  backButton: {\n    padding: 10,\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  counterContainer: {\n    backgroundColor: 'white',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 15,\n  },\n  counterText: {\n    color: colors.primary,\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  selectedSection: {\n    backgroundColor: 'white',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  selectedTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 10,\n  },\n  selectedPlayersContainer: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n  selectedPlayerChip: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 15,\n  },\n  selectedPlayerChipText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  playersList: {\n    flex: 1,\n    marginTop: 10,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  selectedPlayerCard: {\n    borderColor: colors.primary,\n    backgroundColor: '#FFF7F3',\n  },\n  playerInfo: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 5,\n  },\n  selectedPlayerName: {\n    color: colors.primary,\n  },\n  playerStats: {\n    fontSize: 14,\n    color: colors.textLight,\n  },\n  selectedPlayerStats: {\n    color: colors.primary,\n  },\n  selectionIndicator: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: colors.textLight,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectedIndicator: {\n    backgroundColor: colors.primary,\n    borderColor: colors.primary,\n  },\n  selectionText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.textLight,\n  },\n  emptyState: {\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: colors.textLight,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  addPlayersButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 10,\n  },\n  addPlayersButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  startButtonContainer: {\n    padding: 20,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  startButton: {\n    backgroundColor: colors.success,\n    padding: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  startButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n};\n\nexport default PlayerSelectionScreenWeb;\n","import React from 'react';\nimport { View, Text, TouchableOpacity, Modal } from 'react-native';\nimport { colors } from '../styles/globalStyles';\n\nconst NumpadModal = ({ visible, onClose, onSubmit, title, currentValue = '' }) => {\n  const [value, setValue] = React.useState(currentValue);\n\n  React.useEffect(() => {\n    setValue(currentValue);\n  }, [currentValue, visible]);\n\n  const handleNumberPress = (number) => {\n    if (value.length < 4) { // Max 4 characters to allow for negative values like -999\n      setValue(value + number);\n    }\n  };\n\n  const handleBackspace = () => {\n    setValue(value.slice(0, -1));\n  };\n\n  const handleToggleSign = () => {\n    if (value === '' || value === '0') {\n      setValue('-');\n    } else if (value === '-') {\n      setValue('');\n    } else if (value.startsWith('-')) {\n      setValue(value.substring(1));\n    } else {\n      setValue('-' + value);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(value);\n    onClose();\n  };\n\n  const renderNumberButton = (number) => (\n    <TouchableOpacity\n      key={number}\n      style={styles.numberButton}\n      onPress={() => handleNumberPress(number.toString())}\n    >\n      <Text style={styles.numberButtonText}>{number}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>{title}</Text>\n          \n          {/* Display */}\n          <View style={styles.display}>\n            <Text style={styles.displayText}>\n              {value || '0'}\n            </Text>\n          </View>\n\n          {/* Numpad */}\n          <View style={styles.numpad}>\n            {/* Row 1 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(1)}\n              {renderNumberButton(2)}\n              {renderNumberButton(3)}\n            </View>\n            \n            {/* Row 2 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(4)}\n              {renderNumberButton(5)}\n              {renderNumberButton(6)}\n            </View>\n            \n            {/* Row 3 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(7)}\n              {renderNumberButton(8)}\n              {renderNumberButton(9)}\n            </View>\n            \n            {/* Row 4 */}\n            <View style={styles.numpadRow}>\n              <TouchableOpacity style={styles.actionButton} onPress={handleToggleSign}>\n                <Text style={styles.actionButtonText}>+/-</Text>\n              </TouchableOpacity>\n              \n              {renderNumberButton(0)}\n              \n              <TouchableOpacity style={styles.actionButton} onPress={handleBackspace}>\n                <Text style={styles.actionButtonText}>⌫</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          {/* Action Buttons */}\n          <View style={styles.actionButtons}>\n            <TouchableOpacity style={styles.cancelButton} onPress={onClose}>\n              <Text style={styles.cancelButtonText}>Anuluj</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n              <Text style={styles.submitButtonText}>OK</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = {\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 20,\n    width: '85%',\n    maxWidth: 350,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n    color: colors.text,\n  },\n  display: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  displayText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.primary,\n    minHeight: 40,\n  },\n  numpad: {\n    marginBottom: 20,\n  },\n  numpadRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  numberButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  numberButtonText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  actionButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.textLight,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  actionButtonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15,\n  },\n  cancelButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: colors.textLight,\n    alignItems: 'center',\n  },\n  cancelButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  submitButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: colors.success,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default NumpadModal;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, Platform, Modal } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { updatePlayerStats, saveGame, updateGame } from '../services/dbInterface';\nimport NumpadModal from '../components/NumpadModal';\n\nconst GameScreenWeb = ({ navigation, route }) => {\n  const { gameData, resumeGame, selectedPlayers } = route.params;\n  \n  // Initialize players with proper state restoration\n  const initializePlayers = () => {\n    if (resumeGame && gameData && gameData.players) {\n      // When resuming, use the saved player data with scores and rounds\n      return gameData.players;\n    } else if (selectedPlayers) {\n      // New game from player selection, initialize fresh players with game structure\n      return selectedPlayers.map(player => ({\n        ...player,\n        totalScore: 0,\n        rounds: []\n      }));\n    } else if (gameData && gameData.players) {\n      // New game with gameData format\n      return gameData.players;\n    } else {\n      // Fallback - shouldn't happen\n      return [];\n    }\n  };\n  \n  const [players, setPlayers] = useState(initializePlayers());\n  const [currentRound, setCurrentRound] = useState(resumeGame && gameData.currentRound ? gameData.currentRound : 1);\n  const [roundScores, setRoundScores] = useState({});\n  const [gameEnded, setGameEnded] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [numpadVisible, setNumpadVisible] = useState(false);\n  const [currentEditingPlayer, setCurrentEditingPlayer] = useState(null);\n  const [gameId, setGameId] = useState(resumeGame ? gameData.id : null);\n\n  useEffect(() => {\n    checkGameEnd();\n  }, [players]);\n\n  const checkGameEnd = async () => {\n    const playersOver101 = players.filter(player => player.totalScore >= 101);\n    if (playersOver101.length > 0) {\n      // Sort all players by score (ascending - lowest score wins)\n      const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n      \n      // Find the lowest score among all players\n      const lowestScore = sortedPlayers[0].totalScore;\n      const winners = sortedPlayers.filter(player => player.totalScore === lowestScore);\n      \n      // If there's only one winner, set them. If multiple winners (tie), set the first one but handle tie in statistics\n      setWinner(winners[0]);\n      setGameEnded(true);\n      \n      // Mark game as completed in database\n      if (gameId) {\n        try {\n          const finalGameState = {\n            players: sortedPlayers,\n            currentRound: currentRound,\n            lastUpdated: new Date().toISOString(),\n            finished: true\n          };\n          await updateGame(gameId, finalGameState, true); // Mark as completed\n          console.log('Game marked as completed');\n        } catch (error) {\n          console.error('Error marking game as completed:', error);\n        }\n      }\n      \n      // Update player statistics with proper tie handling\n      // Only save statistics if at least one player has score higher than 50\n      const hasPlayerWithHighScore = sortedPlayers.some(player => player.totalScore > 50);\n      \n      if (hasPlayerWithHighScore) {\n        try {\n          let currentPlace = 1;\n          let previousScore = null;\n          let playersAtSamePlace = 0;\n          \n          for (let i = 0; i < sortedPlayers.length; i++) {\n            const player = sortedPlayers[i];\n            \n            // If this player has the same score as previous, they get the same place\n            if (previousScore !== null && player.totalScore !== previousScore) {\n              currentPlace += playersAtSamePlace;\n              playersAtSamePlace = 1;\n            } else {\n              playersAtSamePlace++;\n            }\n            \n            await updatePlayerStats(player.id, currentPlace);\n            previousScore = player.totalScore;\n          }\n          console.log('Player statistics updated successfully with tie handling');\n        } catch (error) {\n          console.error('Error updating player statistics:', error);\n        }\n      } else {\n        console.log('No player has score higher than 50, skipping statistics update');\n      }\n    }\n  };\n\n  const updateRoundScore = (playerId, score) => {\n    // Handle negative values and empty strings\n    let numScore = 0;\n    if (score === '' || score === '-') {\n      numScore = 0;\n    } else {\n      numScore = parseInt(score) || 0;\n    }\n    \n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: numScore\n    }));\n  };\n\n  const openNumpad = (player) => {\n    setCurrentEditingPlayer(player);\n    setNumpadVisible(true);\n  };\n\n  const handleNumpadSubmit = (value) => {\n    if (currentEditingPlayer) {\n      updateRoundScore(currentEditingPlayer.id, value);\n      setCurrentEditingPlayer(null);\n    }\n  };\n\n  const submitRound = async () => {\n    // Validate all players have scores (including negative values)\n    const allScoresEntered = players.every(player => \n      roundScores[player.id] !== undefined\n    );\n\n    if (!allScoresEntered) {\n      if (Platform.OS === 'web') {\n        alert('Wprowadź wyniki dla wszystkich graczy!');\n      }\n      return;\n    }\n\n    // Update player scores (allow negative values)\n    const updatedPlayers = players.map(player => ({\n      ...player,\n      totalScore: player.totalScore + (roundScores[player.id] || 0),\n      rounds: [...player.rounds, roundScores[player.id] || 0]\n    }));\n\n    setPlayers(updatedPlayers);\n    setCurrentRound(currentRound + 1);\n    setRoundScores({});\n\n    // Save game state\n    try {\n      const gameState = {\n        players: updatedPlayers, // Save the complete updated player data\n        currentRound: currentRound + 1,\n        lastUpdated: new Date().toISOString()\n      };\n\n      if (gameId) {\n        await updateGame(gameId, gameState, false);\n      } else {\n        // For new games, save with the updated players as both the players and state\n        const newGameId = await saveGame(updatedPlayers, gameState, false);\n        setGameId(newGameId);\n      }\n      console.log('Game state saved successfully');\n    } catch (error) {\n      console.error('Error saving game state:', error);\n    }\n  };\n\n  const endGame = () => {\n    setModalVisible(true);\n  };\n\n  const confirmEndGame = async () => {\n    // Sort players by score for final ranking\n    const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n    \n    // Mark game as completed in database\n    if (gameId) {\n      try {\n        const finalGameState = {\n          players: sortedPlayers,\n          currentRound: currentRound,\n          lastUpdated: new Date().toISOString(),\n          finished: true\n        };\n        await updateGame(gameId, finalGameState, true); // Mark as completed\n        console.log('Game manually ended and marked as completed');\n      } catch (error) {\n        console.error('Error marking game as completed:', error);\n      }\n    }\n    \n    // Update player statistics if game wasn't already ended\n    if (!gameEnded) {\n      try {\n        let currentPlace = 1;\n        let previousScore = null;\n        let playersAtSamePlace = 0;\n        \n        for (let i = 0; i < sortedPlayers.length; i++) {\n          const player = sortedPlayers[i];\n          \n          // If this player has the same score as previous, they get the same place\n          if (previousScore !== null && player.totalScore !== previousScore) {\n            currentPlace += playersAtSamePlace;\n            playersAtSamePlace = 1;\n          } else {\n            playersAtSamePlace++;\n          }\n          \n          await updatePlayerStats(player.id, currentPlace);\n          previousScore = player.totalScore;\n        }\n        console.log('Player statistics updated successfully with tie handling');\n      } catch (error) {\n        console.error('Error updating player statistics:', error);\n      }\n    }\n    \n    if (Platform.OS === 'web') {\n      const resultText = sortedPlayers.map((player, index) => \n        `${index + 1}. ${player.name}: ${player.totalScore} pkt`\n      ).join('\\n');\n      \n      alert(`Gra zakończona!\\n\\nWyniki:\\n${resultText}`);\n    }\n    \n    navigation.goBack();\n  };\n\n  const renderPlayerCard = (player) => {\n    const isEliminated = player.totalScore >= 101;\n    \n    return (\n      <View key={player.id} style={[\n        styles.playerCard,\n        isEliminated && styles.eliminatedPlayerCard\n      ]}>\n        <View style={styles.playerHeader}>\n          <Text style={[\n            styles.playerName,\n            isEliminated && styles.eliminatedPlayerName\n          ]}>\n            {player.name}\n          </Text>\n          <Text style={[\n            styles.playerScore,\n            isEliminated && styles.eliminatedPlayerScore\n          ]}>\n            {player.totalScore} pkt\n          </Text>\n        </View>\n        \n        {!gameEnded && (\n          <View style={styles.scoreInputContainer}>\n            <Text style={styles.roundLabel}>Runda {currentRound}:</Text>\n            <TouchableOpacity\n              style={[\n                styles.scoreButton,\n                isEliminated && styles.eliminatedScoreButton\n              ]}\n              onPress={() => !isEliminated && openNumpad(player)}\n              disabled={isEliminated}\n            >\n              <Text style={[\n                styles.scoreButtonText,\n                isEliminated && styles.eliminatedScoreButtonText\n              ]}>\n                {roundScores[player.id] !== undefined ? roundScores[player.id].toString() : '0'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        {player.rounds.length > 0 && (\n          <View style={styles.roundHistory}>\n            <Text style={styles.roundHistoryTitle}>Historia rund:</Text>\n            <Text style={styles.roundHistoryText}>\n              {player.rounds.join(', ')}\n            </Text>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  if (gameEnded && winner) {\n    return (\n      <View style={[globalStyles.container, globalStyles.centered, { backgroundColor: colors.success }]}>\n        <Text style={styles.gameEndTitle}>🎉 Gra zakończona! 🎉</Text>\n        <Text style={styles.winnerText}>Zwycięzca: {winner.name}</Text>\n        <Text style={styles.winnerScore}>Wynik: {winner.totalScore} punktów</Text>\n        \n        <View style={styles.finalRanking}>\n          <Text style={styles.rankingTitle}>Końcowy ranking:</Text>\n          {(() => {\n            const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n            let currentPlace = 1;\n            let previousScore = null;\n            let playersAtSamePlace = 0;\n            \n            return sortedPlayers.map((player, index) => {\n              // Calculate proper place considering ties\n              if (previousScore !== null && player.totalScore !== previousScore) {\n                currentPlace += playersAtSamePlace;\n                playersAtSamePlace = 1;\n              } else {\n                playersAtSamePlace++;\n              }\n              \n              const displayPlace = currentPlace;\n              previousScore = player.totalScore;\n              \n              return (\n                <Text key={player.id} style={styles.rankingItem}>\n                  {displayPlace}. {player.name}: {player.totalScore} pkt\n                  {displayPlace === 1 && ' 🏆'}\n                  {displayPlace === 2 && ' 🥈'}\n                  {displayPlace === 3 && ' 🥉'}\n                </Text>\n              );\n            });\n          })()}\n        </View>\n        \n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Text style={styles.backButtonText}>🏠 Powrót do menu</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.headerButton}>\n          <Text style={styles.headerButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <View style={styles.headerCenter}>\n          <Text style={styles.headerTitle}>🎮 Smoki</Text>\n          <Text style={styles.roundText}>Runda {currentRound}</Text>\n        </View>\n        \n        <TouchableOpacity onPress={endGame} style={styles.headerButton}>\n          <Text style={styles.headerButtonText}>Zakończ</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Players */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {[...players].sort((a, b) => a.totalScore - b.totalScore).map(renderPlayerCard)} {/* Sort by current score (lowest first = best) */}\n      </ScrollView>\n\n      {/* Submit Round Button */}\n      <View style={styles.submitButtonContainer}>\n        <TouchableOpacity \n          style={styles.submitButton}\n          onPress={submitRound}\n        >\n          <Text style={styles.submitButtonText}>\n            ✅ Zatwierdź rundę {currentRound}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* End Game Confirmation Modal */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Zakończyć grę?</Text>\n            <Text style={styles.modalText}>\n              Czy na pewno chcesz zakończyć grę w rundzie {currentRound}?\n            </Text>\n            \n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.textLight }]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.modalButtonText}>Anuluj</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.danger }]}\n                onPress={confirmEndGame}\n              >\n                <Text style={[styles.modalButtonText, { color: 'white' }]}>\n                  Zakończ grę\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Numpad Modal */}\n      <NumpadModal\n        visible={numpadVisible}\n        onClose={() => {\n          setNumpadVisible(false);\n          setCurrentEditingPlayer(null);\n        }}\n        onSubmit={handleNumpadSubmit}\n        title={currentEditingPlayer ? `${currentEditingPlayer.name} - Runda ${currentRound}` : ''}\n        currentValue={currentEditingPlayer ? roundScores[currentEditingPlayer.id]?.toString() || '' : ''}\n      />\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 15,\n    backgroundColor: colors.primary,\n  },\n  headerButton: {\n    padding: 10,\n  },\n  headerButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  headerCenter: {\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  roundText: {\n    fontSize: 14,\n    color: 'white',\n    opacity: 0.9,\n  },\n  rulesContainer: {\n    backgroundColor: '#E3F2FD',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n  },\n  rulesText: {\n    fontSize: 14,\n    color: colors.text,\n    textAlign: 'center',\n  },\n  playersList: {\n    flex: 1,\n    marginTop: 10,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 15,\n    marginVertical: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  eliminatedPlayerCard: {\n    backgroundColor: '#FFEBEE',\n    opacity: 0.7,\n  },\n  playerHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n  },\n  eliminatedPlayerName: {\n    color: colors.danger,\n    textDecorationLine: 'line-through',\n  },\n  playerScore: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.primary,\n  },\n  eliminatedPlayerScore: {\n    color: colors.danger,\n  },\n  scoreInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  roundLabel: {\n    fontSize: 16,\n    color: colors.text,\n    marginRight: 10,\n    flex: 1,\n  },\n  scoreButton: {\n    borderWidth: 2,\n    borderColor: colors.primary,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: colors.primary,\n    width: 80,\n    alignItems: 'center',\n  },\n  scoreButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  eliminatedScoreButton: {\n    backgroundColor: '#F5F5F5',\n    borderColor: colors.textLight,\n  },\n  eliminatedScoreButtonText: {\n    color: colors.textLight,\n  },\n  roundHistory: {\n    marginTop: 5,\n  },\n  roundHistoryTitle: {\n    fontSize: 12,\n    color: colors.textLight,\n    marginBottom: 2,\n  },\n  roundHistoryText: {\n    fontSize: 12,\n    color: colors.textLight,\n  },\n  submitButtonContainer: {\n    padding: 20,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  submitButton: {\n    backgroundColor: colors.success,\n    padding: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  gameEndTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  winnerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  winnerScore: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  finalRanking: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 20,\n    marginHorizontal: 20,\n    marginBottom: 30,\n  },\n  rankingTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  rankingItem: {\n    fontSize: 16,\n    color: colors.text,\n    textAlign: 'center',\n    marginVertical: 3,\n  },\n  backButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 30,\n    paddingVertical: 15,\n    borderRadius: 25,\n    marginHorizontal: 40,\n  },\n  backButtonText: {\n    color: colors.success,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 30,\n    width: '80%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 15,\n    color: colors.text,\n  },\n  modalText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 25,\n    color: colors.textLight,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default GameScreenWeb;\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useState } from 'react';\nimport { Platform } from 'react-native';\nimport MainMenuScreenWeb from './src/screens/MainMenuScreenWeb';\nimport PlayersScreenWeb from './src/screens/PlayersScreenWeb';\nimport PlayerSelectionScreenWeb from './src/screens/PlayerSelectionScreenWeb';\nimport GameScreenWeb from './src/screens/GameScreenWeb';\n\n// Simple state-based navigation for web\nexport default function App() {\n  const [currentScreen, setCurrentScreen] = useState('MainMenu');\n  const [screenParams, setScreenParams] = useState({});\n  \n  console.log('App component rendering on:', Platform.OS, 'Current screen:', currentScreen);\n  \n  // Simple navigation object\n  const navigation = {\n    navigate: (screenName, params = {}) => {\n      console.log('Navigate to:', screenName, 'with params:', params);\n      setCurrentScreen(screenName);\n      setScreenParams(params);\n    },\n    goBack: () => {\n      console.log('Go back');\n      setCurrentScreen('MainMenu');\n      setScreenParams({});\n    }\n  };\n  \n  // Screen routing\n  switch (currentScreen) {\n    case 'Players':\n      return <PlayersScreenWeb navigation={navigation} />;\n    case 'PlayerSelection':\n      return <PlayerSelectionScreenWeb navigation={navigation} route={{ params: screenParams }} />;\n    case 'Game':\n      return <GameScreenWeb navigation={navigation} route={{ params: screenParams }} />;\n    case 'MainMenu':\n    default:\n      return <MainMenuScreenWeb navigation={navigation} />;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [513], () => (__webpack_require__(7655)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["colors","globalStyles","StyleSheet","create","container","flex","backgroundColor","centered","justifyContent","alignItems","padding","paddingTop","margin","shadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","card","borderRadius","marginVertical","button","paddingVertical","paddingHorizontal","buttonText","color","fontSize","fontWeight","secondaryButton","outlineButton","borderWidth","borderColor","outlineButtonText","textAlign","title","marginBottom","marginTop","subtitle","text","lineHeight","textInput","row","flexDirection","column","flex1","textCenter","textBold","storage","setItem","async","key","value","localStorage","error","console","getItem","removeItem","PLAYERS_KEY","GAMES_KEY","GAME_ROUNDS_KEY","webGetPlayers","players","JSON","parse","webGetGames","games","webGetGameRounds","rounds","getAllPlayers","updatePlayerStats","playerId","place","playerIndex","findIndex","p","id","totalGames","firstPlace","secondPlace","thirdPlace","stringify","success","updateGame","gameId","currentState","isCompleted","gameIndex","g","MainMenuScreenWeb","navigation","isLoading","setIsLoading","useState","hasActiveGame","setHasActiveGame","activeGameData","setActiveGameData","useEffect","initializeApp","checkForActiveGame","interval","setInterval","clearInterval","log","gameRounds","undefined","length","Promise","resolve","initDatabase","activeGame","find","game","Object","assign","getActiveGame","_jsx","View","style","children","Text","_jsxs","overflow","TouchableOpacity","minWidth","onPress","resumeGame","gameData","currentRound","navigate","styles","header","paddingBottom","backButton","backButtonText","addButton","addButtonText","playersList","playerCard","playerInfo","playerName","playerStats","playerActions","gap","actionButton","actionButtonText","emptyState","emptyStateText","modalOverlay","modalContent","maxWidth","modalTitle","modalButtons","modalButton","modalButtonText","PlayersScreenWeb","setPlayers","modalVisible","setModalVisible","editingPlayer","setEditingPlayer","setPlayerName","loadPlayers","sortedPlayers","sort","a","b","handleDeletePlayer","confirm","filteredPlayers","filter","deletePlayer","goBack","ScrollView","contentContainerStyle","map","player","name","handleEditPlayer","Modal","visible","transparent","animationType","onRequestClose","TextInput","placeholder","onChangeText","autoFocus","trim","updatePlayer","newPlayer","Date","now","Error","push","addPlayer","alert","message","counterContainer","counterText","selectedSection","marginHorizontal","selectedTitle","selectedPlayersContainer","selectedPlayerChip","selectedPlayerChipText","selectedPlayerCard","selectedPlayerName","selectedPlayerStats","selectionIndicator","selectedIndicator","selectionText","addPlayersButton","addPlayersButtonText","startButtonContainer","startButton","startButtonText","PlayerSelectionScreenWeb","selectedPlayers","setSelectedPlayers","playersData","isSelected","togglePlayerSelection","startGame","display","displayText","minHeight","numpad","numpadRow","numberButton","numberButtonText","actionButtons","cancelButton","cancelButtonText","submitButton","submitButtonText","NumpadModal","onClose","onSubmit","currentValue","setValue","React","renderNumberButton","number","handleNumberPress","toString","handleToggleSign","startsWith","substring","handleBackspace","slice","handleSubmit","headerButton","headerButtonText","headerCenter","headerTitle","roundText","opacity","rulesContainer","rulesText","eliminatedPlayerCard","playerHeader","eliminatedPlayerName","textDecorationLine","playerScore","eliminatedPlayerScore","scoreInputContainer","roundLabel","marginRight","scoreButton","scoreButtonText","eliminatedScoreButton","eliminatedScoreButtonText","roundHistory","roundHistoryTitle","roundHistoryText","submitButtonContainer","gameEndTitle","winnerText","winnerScore","finalRanking","rankingTitle","rankingItem","modalText","GameScreenWeb","route","params","totalScore","setCurrentRound","roundScores","setRoundScores","gameEnded","setGameEnded","winner","setWinner","numpadVisible","setNumpadVisible","currentEditingPlayer","setCurrentEditingPlayer","setGameId","checkGameEnd","lowestScore","winners","finalGameState","lastUpdated","toISOString","finished","some","currentPlace","previousScore","playersAtSamePlace","i","index","displayPlace","endGame","isEliminated","openNumpad","disabled","join","every","updatedPlayers","gameState","newGameId","completedGames","newGame","createdAt","saveGame","resultText","updateRoundScore","score","numScore","parseInt","prev","registerRootComponent","currentScreen","setCurrentScreen","screenParams","setScreenParams","screenName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}