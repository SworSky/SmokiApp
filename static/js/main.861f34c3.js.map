{"version":3,"file":"static/js/main.861f34c3.js","mappings":"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","sources":["src/styles/globalStyles.js","src/services/storageService.js","src/services/dbInterface.js","src/screens/MainMenuScreenWeb.js","src/screens/PlayersScreenWeb.js","src/screens/PlayerSelectionScreenWeb.js","src/screens/PlayerOrderScreenWeb.js","src/components/NumpadModal.js","src/screens/GameScreenWeb.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\nexport const colors = {\n  primary: '#FF6B35',      // Dragon orange\n  secondary: '#F7931E',    // Golden orange\n  accent: '#FFB84D',       // Light orange\n  success: '#4CAF50',      // Green\n  warning: '#FF9800',      // Orange\n  danger: '#F44336',       // Red\n  background: '#FFF3E0',   // Light cream\n  surface: '#FFFFFF',      // White\n  text: '#2C3E50',         // Dark blue-gray\n  textLight: '#7F8C8D',    // Light gray\n  border: '#E0E0E0',       // Light border\n  shadow: '#000000',       // Shadow\n  dragon: {\n    fire: '#FF4444',       // Fire red\n    scale: '#228B22',      // Scale green\n    gold: '#FFD700',       // Gold\n    purple: '#8A2BE2',     // Purple\n  }\n};\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding: {\n    padding: 20,\n    paddingTop: 80, // Extra top padding for status bar area and notch\n  },\n  margin: {\n    margin: 10,\n  },\n  shadow: {\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  card: {\n    backgroundColor: colors.surface,\n    borderRadius: 15,\n    padding: 20,\n    marginVertical: 10,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  button: {\n    backgroundColor: colors.primary,\n    borderRadius: 25,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    alignItems: 'center',\n    marginVertical: 10,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  buttonText: {\n    color: colors.surface,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  secondaryButton: {\n    backgroundColor: colors.secondary,\n    borderRadius: 25,\n    paddingVertical: 12,\n    paddingHorizontal: 25,\n    alignItems: 'center',\n    marginVertical: 8,\n  },\n  outlineButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 2,\n    borderColor: colors.primary,\n    borderRadius: 25,\n    paddingVertical: 12,\n    paddingHorizontal: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  outlineButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '300',\n    color: 'rgba(255, 255, 255, 0.7)',\n    textAlign: 'center',\n    marginBottom: 30,\n    marginTop: 10,\n  },\n  subtitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 15,\n  },\n  text: {\n    fontSize: 16,\n    color: colors.text,\n    lineHeight: 24,\n  },\n  textInput: {\n    backgroundColor: colors.surface,\n    borderRadius: 10,\n    padding: 15,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: colors.border,\n    marginVertical: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  flex1: {\n    flex: 1,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n  textBold: {\n    fontWeight: 'bold',\n  },\n  marginTop: {\n    marginTop: 20,\n  },\n  marginBottom: {\n    marginBottom: 20,\n  },\n});\n\nexport const dragonGradients = {\n  fire: ['#FF6B35', '#FF4444'],\n  gold: ['#FFD700', '#F7931E'],\n  green: ['#228B22', '#32CD32'],\n  purple: ['#8A2BE2', '#9932CC'],\n  ocean: ['#1E90FF', '#00CED1'],\n};\n","import { Platform } from 'react-native';\n\nlet storage;\n\nif (Platform.OS === 'web') {\n  // Web storage using localStorage\n  storage = {\n    setItem: async (key, value) => {\n      try {\n        localStorage.setItem(key, value);\n      } catch (error) {\n        console.error('localStorage error:', error);\n      }\n    },\n    getItem: async (key) => {\n      try {\n        return localStorage.getItem(key);\n      } catch (error) {\n        console.error('localStorage error:', error);\n        return null;\n      }\n    },\n    removeItem: async (key) => {\n      try {\n        localStorage.removeItem(key);\n      } catch (error) {\n        console.error('localStorage error:', error);\n      }\n    }\n  };\n} else {\n  // Native storage using AsyncStorage\n  const AsyncStorage = require('@react-native-async-storage/async-storage').default;\n  storage = AsyncStorage;\n}\n\nexport default storage;\n","import { Platform } from 'react-native';\n\n// Import based on platform\nlet nativeDb;\nif (Platform.OS !== 'web') {\n  nativeDb = require('./database');\n}\n\n// Web database implementation\nimport storage from './storageService';\n\nconst PLAYERS_KEY = 'smoki_players';\nconst GAMES_KEY = 'smoki_games';\nconst GAME_ROUNDS_KEY = 'smoki_game_rounds';\n\n// Web implementation functions\nconst webGetPlayers = async () => {\n  try {\n    const players = await storage.getItem(PLAYERS_KEY);\n    return players ? JSON.parse(players) : [];\n  } catch (error) {\n    console.error('Error getting players:', error);\n    return [];\n  }\n};\n\nconst webGetGames = async () => {\n  try {\n    const games = await storage.getItem(GAMES_KEY);\n    return games ? JSON.parse(games) : [];\n  } catch (error) {\n    console.error('Error getting games:', error);\n    return [];\n  }\n};\n\nconst webGetGameRounds = async () => {\n  try {\n    const rounds = await storage.getItem(GAME_ROUNDS_KEY);\n    return rounds ? JSON.parse(rounds) : [];\n  } catch (error) {\n    console.error('Error getting game rounds:', error);\n    return [];\n  }\n};\n\n// Universal database interface\nexport const initDatabase = async () => {\n  if (Platform.OS === 'web') {\n    try {\n      // Initialize empty arrays if they don't exist\n      const players = await webGetPlayers();\n      const games = await webGetGames();\n      const gameRounds = await webGetGameRounds();\n      \n      if (!players || players.length === undefined) await storage.setItem(PLAYERS_KEY, JSON.stringify([]));\n      if (!games || games.length === undefined) await storage.setItem(GAMES_KEY, JSON.stringify([]));\n      if (!gameRounds || gameRounds.length === undefined) await storage.setItem(GAME_ROUNDS_KEY, JSON.stringify([]));\n      \n      return Promise.resolve();\n    } catch (error) {\n      console.error('Error initializing web database:', error);\n      return Promise.resolve(); // Don't fail, just continue\n    }\n  } else {\n    return nativeDb.initDatabase();\n  }\n};\n\nexport const addPlayer = async (name) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const newPlayer = {\n        id: Date.now(), // Simple ID generation\n        name,\n        totalGames: 0,\n        firstPlace: 0,\n        secondPlace: 0,\n        thirdPlace: 0\n      };\n      \n      // Check if player already exists\n      if (players.find(p => p.name === name)) {\n        throw new Error('Player already exists');\n      }\n      \n      players.push(newPlayer);\n      await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n      return newPlayer.id;\n    } catch (error) {\n      console.error('Error adding player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.addPlayer(name);\n  }\n};\n\nexport const getAllPlayers = async () => {\n  if (Platform.OS === 'web') {\n    return await webGetPlayers();\n  } else {\n    return nativeDb.getAllPlayers();\n  }\n};\n\nexport const updatePlayer = async (id, name) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const playerIndex = players.findIndex(p => p.id === id);\n      if (playerIndex !== -1) {\n        players[playerIndex].name = name;\n        await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updatePlayer(id, name);\n  }\n};\n\nexport const deletePlayer = async (id) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const filteredPlayers = players.filter(p => p.id !== id);\n      await storage.setItem(PLAYERS_KEY, JSON.stringify(filteredPlayers));\n      return { success: true };\n    } catch (error) {\n      console.error('Error deleting player:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.deletePlayer(id);\n  }\n};\n\nexport const updatePlayerStats = async (playerId, place) => {\n  if (Platform.OS === 'web') {\n    try {\n      const players = await webGetPlayers();\n      const playerIndex = players.findIndex(p => p.id === playerId);\n      if (playerIndex !== -1) {\n        players[playerIndex].totalGames += 1;\n        if (place === 1) players[playerIndex].firstPlace += 1;\n        else if (place === 2) players[playerIndex].secondPlace += 1;\n        else if (place === 3) players[playerIndex].thirdPlace += 1;\n        \n        await storage.setItem(PLAYERS_KEY, JSON.stringify(players));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating player stats:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updatePlayerStats(playerId, place);\n  }\n};\n\nexport const saveGame = async (players, currentState, isCompleted = false) => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      \n      // Remove any existing incomplete games first\n      const completedGames = games.filter(game => game.isCompleted === 1);\n      \n      const newGame = {\n        id: Date.now(),\n        players: JSON.stringify(players),\n        currentState: JSON.stringify(currentState),\n        isCompleted: isCompleted ? 1 : 0,\n        createdAt: new Date().toISOString()\n      };\n      \n      completedGames.push(newGame);\n      await storage.setItem(GAMES_KEY, JSON.stringify(completedGames));\n      return newGame.id;\n    } catch (error) {\n      console.error('Error saving game:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.saveGame(players, currentState, isCompleted);\n  }\n};\n\nexport const updateGame = async (gameId, currentState, isCompleted = false) => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      const gameIndex = games.findIndex(g => g.id === gameId);\n      \n      if (gameIndex !== -1) {\n        // Update both the players and currentState to keep them in sync\n        games[gameIndex].players = JSON.stringify(currentState.players);\n        games[gameIndex].currentState = JSON.stringify(currentState);\n        games[gameIndex].isCompleted = isCompleted ? 1 : 0;\n        await storage.setItem(GAMES_KEY, JSON.stringify(games));\n        return { success: true };\n      }\n      return { success: false };\n    } catch (error) {\n      console.error('Error updating game:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.updateGame(gameId, currentState, isCompleted);\n  }\n};\n\nexport const getActiveGame = async () => {\n  if (Platform.OS === 'web') {\n    try {\n      const games = await webGetGames();\n      const activeGame = games.find(game => game.isCompleted === 0);\n      if (activeGame) {\n        return {\n          ...activeGame,\n          players: JSON.parse(activeGame.players),\n          currentState: JSON.parse(activeGame.currentState)\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting active game:', error);\n      return null;\n    }\n  } else {\n    return nativeDb.getActiveGame();\n  }\n};\n\nexport const addGameRound = async (gameId, roundNumber, playerScores) => {\n  if (Platform.OS === 'web') {\n    try {\n      const rounds = await webGetGameRounds();\n      const newRound = {\n        id: Date.now(),\n        gameId,\n        roundNumber,\n        playerScores: JSON.stringify(playerScores)\n      };\n      \n      rounds.push(newRound);\n      await storage.setItem(GAME_ROUNDS_KEY, JSON.stringify(rounds));\n      return { success: true };\n    } catch (error) {\n      console.error('Error adding game round:', error);\n      throw error;\n    }\n  } else {\n    return nativeDb.addGameRound(gameId, roundNumber, playerScores);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { initDatabase, getActiveGame } from '../services/dbInterface';\n\nconst MainMenuScreenWeb = ({ navigation }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasActiveGame, setHasActiveGame] = useState(false);\n  const [activeGameData, setActiveGameData] = useState(null);\n\n  useEffect(() => {\n    initializeApp();\n  }, []);\n\n  useEffect(() => {\n    // Check for active game every time screen comes into focus\n    const focusHandler = () => {\n      checkForActiveGame();\n    };\n\n    // For web, we can use visibility change or just call it when component updates\n    focusHandler();\n    \n    // Set up interval to check periodically (optional)\n    const interval = setInterval(checkForActiveGame, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const initializeApp = async () => {\n    try {\n      console.log('Initializing app...');\n      await initDatabase();\n      console.log('Database initialized successfully');\n      await checkForActiveGame();\n      console.log('Active game check completed');\n    } catch (error) {\n      console.error('Error initializing app:', error);\n      // Don't block the UI, just log the error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const checkForActiveGame = async () => {\n    try {\n      const activeGame = await getActiveGame();\n      if (activeGame) {\n        setHasActiveGame(true);\n        setActiveGameData(activeGame);\n      } else {\n        setHasActiveGame(false);\n        setActiveGameData(null);\n      }\n    } catch (error) {\n      console.error('Error checking for active game:', error);\n      setHasActiveGame(false);\n      setActiveGameData(null);\n    }\n  };\n\n  const resumeGame = () => {\n    if (activeGameData) {\n      const gameData = {\n        id: activeGameData.id,\n        players: activeGameData.players, // This should already have the scores and rounds\n        currentRound: activeGameData.currentState.currentRound || 1\n      };\n      navigation.navigate('Game', { gameData, resumeGame: true });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.primary }]}>\n        <Text style={{ fontSize: 24, color: 'white' }}>\n          🐉 Ładowanie Smoki...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, globalStyles.centered, { backgroundColor: colors.primary }]}>\n      <Text style={{ \n        fontSize: 48, \n        fontWeight: 'bold', \n        color: 'white', \n        marginBottom: 20,\n        textAlign: 'center'\n      }}>\n        🐉 SMOKI\n      </Text>\n      \n      <Text style={{ \n        fontSize: 18, \n        color: 'white', \n        marginBottom: 40,\n        textAlign: 'center'\n      }}>\n        by Maślak\n      </Text>\n\n      {hasActiveGame && (\n        <TouchableOpacity\n          style={{\n            backgroundColor: colors.success,\n            padding: 15,\n            borderRadius: 10,\n            marginVertical: 10,\n            minWidth: 200,\n            alignItems: 'center'\n          }}\n          onPress={resumeGame}\n        >\n          <Text style={{ fontSize: 18, color: 'white', fontWeight: 'bold' }}>\n            ▶️ Kontynuuj grę\n          </Text>\n        </TouchableOpacity>\n      )}\n\n      <TouchableOpacity\n        style={{\n          backgroundColor: 'white',\n          padding: 15,\n          borderRadius: 10,\n          marginVertical: 10,\n          minWidth: 200,\n          alignItems: 'center'\n        }}\n        onPress={() => {\n          navigation.navigate('Players');\n        }}\n      >\n        <Text style={{ fontSize: 18, color: colors.primary, fontWeight: 'bold' }}>\n          👥 Gracze\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={{\n          backgroundColor: 'white',\n          padding: 15,\n          borderRadius: 10,\n          marginVertical: 10,\n          minWidth: 200,\n          alignItems: 'center'\n        }}\n        onPress={() => {\n          navigation.navigate('PlayerSelection');\n        }}\n      >\n        <Text style={{ fontSize: 18, color: colors.primary, fontWeight: 'bold' }}>\n          🎮 Nowa Gra\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default MainMenuScreenWeb;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, Platform, TextInput, Modal, ScrollView } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { getAllPlayers, addPlayer, updatePlayer, deletePlayer } from '../services/dbInterface';\n\nconst PlayersScreenWeb = ({ navigation }) => {\n  const [players, setPlayers] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [editingPlayer, setEditingPlayer] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadPlayers();\n  }, []);\n\n  const loadPlayers = async () => {\n    try {\n      setIsLoading(true);\n      const playersData = await getAllPlayers();\n      setPlayers(playersData || []);\n    } catch (error) {\n      console.error('Error loading players:', error);\n      setPlayers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddPlayer = async () => {\n    if (!playerName.trim()) return;\n\n    try {\n      if (editingPlayer) {\n        await updatePlayer(editingPlayer.id, playerName.trim());\n      } else {\n        await addPlayer(playerName.trim());\n      }\n      await loadPlayers();\n      setModalVisible(false);\n      setPlayerName('');\n      setEditingPlayer(null);\n    } catch (error) {\n      console.error('Error saving player:', error);\n      if (Platform.OS === 'web') {\n        alert('Błąd: ' + error.message);\n      }\n    }\n  };\n\n  const handleEditPlayer = (player) => {\n    setEditingPlayer(player);\n    setPlayerName(player.name);\n    setModalVisible(true);\n  };\n\n  const handleDeletePlayer = async (playerId) => {\n    if (Platform.OS === 'web') {\n      if (!confirm('Czy na pewno chcesz usunąć tego gracza?')) return;\n    }\n\n    try {\n      await deletePlayer(playerId);\n      await loadPlayers();\n    } catch (error) {\n      console.error('Error deleting player:', error);\n    }\n  };\n\n  const renderPlayer = (player) => (\n    <View key={player.id} style={styles.playerCard}>\n      <View style={styles.playerInfo}>\n        <Text style={styles.playerName}>{player.name}</Text>\n        <Text style={styles.playerStats}>\n          🏆 {player.firstPlace} 🥈 {player.secondPlace} 🥉 {player.thirdPlace} | Gry: {player.totalGames}\n        </Text>\n      </View>\n      \n      <View style={styles.playerActions}>\n        <TouchableOpacity \n          style={[styles.actionButton, { backgroundColor: colors.warning }]}\n          onPress={() => handleEditPlayer(player)}\n        >\n          <Text style={styles.actionButtonText}>✏️</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[styles.actionButton, { backgroundColor: colors.danger }]}\n          onPress={() => handleDeletePlayer(player.id)}\n        >\n          <Text style={styles.actionButtonText}>🗑️</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.background }]}>\n        <Text style={{ fontSize: 24, color: colors.text }}>\n          Ładowanie graczy...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={navigation.goBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <Text style={styles.title}>👥 Gracze</Text>\n        \n        <TouchableOpacity \n          onPress={() => setModalVisible(true)}\n          style={styles.addButton}\n        >\n          <Text style={styles.addButtonText}>+ Dodaj</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Players List */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {players.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Text style={styles.emptyStateText}>\n              Brak graczy. Dodaj pierwszego gracza!\n            </Text>\n          </View>\n        ) : (\n          players.map(renderPlayer)\n        )}\n      </ScrollView>\n\n      {/* Add/Edit Player Modal */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              {editingPlayer ? 'Edytuj gracza' : 'Dodaj gracza'}\n            </Text>\n            \n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Imię gracza\"\n              value={playerName}\n              onChangeText={setPlayerName}\n              autoFocus={true}\n            />\n            \n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.textLight }]}\n                onPress={() => {\n                  setModalVisible(false);\n                  setPlayerName('');\n                  setEditingPlayer(null);\n                }}\n              >\n                <Text style={styles.modalButtonText}>Anuluj</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.primary }]}\n                onPress={handleAddPlayer}\n              >\n                <Text style={[styles.modalButtonText, { color: 'white' }]}>\n                  {editingPlayer ? 'Zapisz' : 'Dodaj'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: colors.primary,\n  },\n  backButton: {\n    padding: 10,\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  addButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  addButtonText: {\n    color: colors.primary,\n    fontWeight: 'bold',\n  },\n  playersList: {\n    flex: 1,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  playerInfo: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 5,\n  },\n  playerStats: {\n    fontSize: 14,\n    color: colors.textLight,\n  },\n  playerActions: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n  actionButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  actionButtonText: {\n    fontSize: 16,\n  },\n  emptyState: {\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: colors.textLight,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 30,\n    width: '80%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n    color: colors.text,\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: colors.border,\n    borderRadius: 10,\n    padding: 15,\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default PlayersScreenWeb;\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { getAllPlayers } from '../services/dbInterface';\n\nconst PlayerSelectionScreenWeb = ({ navigation }) => {\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadPlayers();\n  }, []);\n\n  const loadPlayers = async () => {\n    try {\n      setIsLoading(true);\n      const playersData = await getAllPlayers();\n      setPlayers(playersData || []);\n    } catch (error) {\n      console.error('Error loading players:', error);\n      setPlayers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const togglePlayerSelection = (player) => {\n    const isSelected = selectedPlayers.find(p => p.id === player.id);\n    \n    if (isSelected) {\n      setSelectedPlayers(selectedPlayers.filter(p => p.id !== player.id));\n    } else {\n      if (selectedPlayers.length < 6) { // Max 6 players\n        setSelectedPlayers([...selectedPlayers, player]);\n      } else {\n        if (Platform.OS === 'web') {\n          alert('Maksymalnie 6 graczy może brać udział w grze!');\n        }\n      }\n    }\n  };\n\n  const startGame = () => {\n    if (selectedPlayers.length < 2) {\n      if (Platform.OS === 'web') {\n        alert('Wybierz co najmniej 2 graczy!');\n      }\n      return;\n    }\n\n    // Navigate to player order screen\n    navigation.navigate('PlayerOrder', { selectedPlayers });\n  };\n\n  const renderPlayer = (player) => {\n    const isSelected = selectedPlayers.find(p => p.id === player.id);\n    \n    return (\n      <TouchableOpacity\n        key={player.id}\n        style={[\n          styles.playerCard,\n          isSelected && styles.selectedPlayerCard\n        ]}\n        onPress={() => togglePlayerSelection(player)}\n      >\n        <View style={styles.playerInfo}>\n          <Text style={[\n            styles.playerName,\n            isSelected && styles.selectedPlayerName\n          ]}>\n            {player.name}\n          </Text>\n          <Text style={[\n            styles.playerStats,\n            isSelected && styles.selectedPlayerStats\n          ]}>\n            🏆 {player.firstPlace} 🥈 {player.secondPlace} 🥉 {player.thirdPlace} | Gry: {player.totalGames}\n          </Text>\n        </View>\n        \n        <View style={[\n          styles.selectionIndicator,\n          isSelected && styles.selectedIndicator\n        ]}>\n          <Text style={styles.selectionText}>\n            {isSelected ? '✓' : '○'}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[globalStyles.centered, { backgroundColor: colors.background }]}>\n        <Text style={{ fontSize: 24, color: colors.text }}>\n          Ładowanie graczy...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={navigation.goBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <Text style={styles.title}>🎮 Wybierz Graczy</Text>\n        \n        <View style={styles.counterContainer}>\n          <Text style={styles.counterText}>{selectedPlayers.length}/6</Text>\n        </View>\n      </View>\n\n      {/* Players List */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {players.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Text style={styles.emptyStateText}>\n              Brak graczy. Dodaj graczy w sekcji \"Gracze\" przed rozpoczęciem gry!\n            </Text>\n            <TouchableOpacity \n              style={styles.addPlayersButton}\n              onPress={() => navigation.navigate('Players')}\n            >\n              <Text style={styles.addPlayersButtonText}>👥 Dodaj Graczy</Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          players.map(renderPlayer)\n        )}\n      </ScrollView>\n\n      {/* Start Game Button */}\n      {selectedPlayers.length >= 2 && (\n        <View style={styles.startButtonContainer}>\n          <TouchableOpacity \n            style={styles.startButton}\n            onPress={startGame}\n          >\n            <Text style={styles.startButtonText}>\n              ➡️ Ustaw kolejność ({selectedPlayers.length} graczy)\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: colors.primary,\n  },\n  backButton: {\n    padding: 10,\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  counterContainer: {\n    backgroundColor: 'white',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 15,\n  },\n  counterText: {\n    color: colors.primary,\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  selectedSection: {\n    backgroundColor: 'white',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  selectedTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 10,\n  },\n  selectedPlayersContainer: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n  selectedPlayerChip: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 15,\n  },\n  selectedPlayerChipText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  playersList: {\n    flex: 1,\n    marginTop: 10,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginVertical: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  selectedPlayerCard: {\n    borderColor: colors.primary,\n    backgroundColor: '#FFF7F3',\n  },\n  playerInfo: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 5,\n  },\n  selectedPlayerName: {\n    color: colors.primary,\n  },\n  playerStats: {\n    fontSize: 14,\n    color: colors.textLight,\n  },\n  selectedPlayerStats: {\n    color: colors.primary,\n  },\n  selectionIndicator: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: colors.textLight,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectedIndicator: {\n    backgroundColor: colors.primary,\n    borderColor: colors.primary,\n  },\n  selectionText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.textLight,\n  },\n  emptyState: {\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: colors.textLight,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  addPlayersButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 10,\n  },\n  addPlayersButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  startButtonContainer: {\n    padding: 20,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  startButton: {\n    backgroundColor: colors.success,\n    padding: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  startButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n};\n\nexport default PlayerSelectionScreenWeb;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\n\nconst PlayerOrderScreenWeb = ({ navigation, route }) => {\n  const { selectedPlayers } = route.params;\n  const [orderedPlayers, setOrderedPlayers] = useState([...selectedPlayers]);\n\n  const movePlayerUp = (index) => {\n    if (index === 0) return;\n    \n    const newOrder = [...orderedPlayers];\n    [newOrder[index - 1], newOrder[index]] = [newOrder[index], newOrder[index - 1]];\n    setOrderedPlayers(newOrder);\n  };\n\n  const movePlayerDown = (index) => {\n    if (index === orderedPlayers.length - 1) return;\n    \n    const newOrder = [...orderedPlayers];\n    [newOrder[index], newOrder[index + 1]] = [newOrder[index + 1], newOrder[index]];\n    setOrderedPlayers(newOrder);\n  };\n\n  const shufflePlayers = () => {\n    const shuffled = [...orderedPlayers];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    setOrderedPlayers(shuffled);\n  };\n\n  const startGame = () => {\n    // Create game data with ordered players\n    const gameData = {\n      players: orderedPlayers.map((player, index) => ({\n        ...player,\n        order: index + 1,\n        totalScore: 0,\n        rounds: []\n      }))\n    };\n\n    navigation.navigate('Game', { gameData });\n  };\n\n  const renderPlayer = (player, index) => (\n    <View key={player.id} style={styles.playerCard}>\n      <View style={styles.orderNumber}>\n        <Text style={styles.orderNumberText}>{index + 1}</Text>\n      </View>\n      \n      <View style={styles.playerInfo}>\n        <Text style={styles.playerName}>{player.name}</Text>\n        <Text style={styles.playerStats}>\n          🏆 {player.firstPlace} 🥈 {player.secondPlace} 🥉 {player.thirdPlace} | Gry: {player.totalGames}\n        </Text>\n      </View>\n      \n      <View style={styles.moveButtons}>\n        <TouchableOpacity \n          style={[\n            styles.moveButton,\n            index === 0 && styles.disabledButton\n          ]}\n          onPress={() => movePlayerUp(index)}\n          disabled={index === 0}\n        >\n          <Text style={[\n            styles.moveButtonText,\n            index === 0 && styles.disabledButtonText\n          ]}>\n            ↑\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[\n            styles.moveButton,\n            index === orderedPlayers.length - 1 && styles.disabledButton\n          ]}\n          onPress={() => movePlayerDown(index)}\n          disabled={index === orderedPlayers.length - 1}\n        >\n          <Text style={[\n            styles.moveButtonText,\n            index === orderedPlayers.length - 1 && styles.disabledButtonText\n          ]}>\n            ↓\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={navigation.goBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <Text style={styles.title}>🎯 Kolejność Graczy</Text>\n        \n        <TouchableOpacity onPress={shufflePlayers} style={styles.shuffleButton}>\n          <Text style={styles.shuffleButtonText}>🎲 Losuj</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Playing Order Preview */}\n      <View style={styles.orderPreview}>\n        <Text style={styles.orderPreviewTitle}>Kolejność gry:</Text>\n        <Text style={styles.orderPreviewText}>\n          {orderedPlayers.map((player, index) => \n            `${index + 1}. ${player.name}`\n          ).join(' → ')}\n        </Text>\n      </View>\n\n      {/* Players List */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {orderedPlayers.map(renderPlayer)}\n      </ScrollView>\n\n      {/* Start Game Button */}\n      <View style={styles.startButtonContainer}>\n        <TouchableOpacity \n          style={styles.startButton}\n          onPress={startGame}\n        >\n          <Text style={styles.startButtonText}>\n            🚀 Rozpocznij Grę!\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: colors.primary,\n  },\n  backButton: {\n    padding: 10,\n  },\n  backButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  shuffleButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  shuffleButtonText: {\n    color: colors.primary,\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  instructionsContainer: {\n    backgroundColor: '#E3F2FD',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n  },\n  instructionsText: {\n    fontSize: 14,\n    color: colors.text,\n    textAlign: 'center',\n  },\n  orderPreview: {\n    backgroundColor: 'white',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  orderPreviewTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 8,\n  },\n  orderPreviewText: {\n    fontSize: 14,\n    color: colors.primary,\n    fontWeight: '500',\n  },\n  playersList: {\n    flex: 1,\n    marginTop: 10,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 15,\n    marginVertical: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  orderNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 15,\n  },\n  orderNumberText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  playerInfo: {\n    flex: 1,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 4,\n  },\n  playerStats: {\n    fontSize: 12,\n    color: colors.textLight,\n  },\n  moveButtons: {\n    gap: 5,\n  },\n  moveButton: {\n    width: 36,\n    height: 36,\n    borderRadius: 18,\n    backgroundColor: colors.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: colors.border,\n  },\n  moveButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  disabledButtonText: {\n    color: colors.textLight,\n  },\n  tipsContainer: {\n    backgroundColor: '#FFF3E0',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n  },\n  tipsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: colors.text,\n    marginBottom: 8,\n  },\n  tipsText: {\n    fontSize: 12,\n    color: colors.textLight,\n    lineHeight: 18,\n  },\n  startButtonContainer: {\n    padding: 20,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  startButton: {\n    backgroundColor: colors.success,\n    padding: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  startButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n};\n\nexport default PlayerOrderScreenWeb;\n","import React from 'react';\nimport { View, Text, TouchableOpacity, Modal } from 'react-native';\nimport { colors } from '../styles/globalStyles';\n\nconst NumpadModal = ({ visible, onClose, onSubmit, title, currentValue = '' }) => {\n  const [value, setValue] = React.useState(currentValue);\n\n  React.useEffect(() => {\n    setValue(currentValue);\n  }, [currentValue, visible]);\n\n  const handleNumberPress = (number) => {\n    if (value.length < 4) { // Max 4 characters to allow for negative values like -999\n      setValue(value + number);\n    }\n  };\n\n  const handleBackspace = () => {\n    setValue(value.slice(0, -1));\n  };\n\n  const handleToggleSign = () => {\n    if (value === '' || value === '0') {\n      setValue('-');\n    } else if (value === '-') {\n      setValue('');\n    } else if (value.startsWith('-')) {\n      setValue(value.substring(1));\n    } else {\n      setValue('-' + value);\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(value);\n    onClose();\n  };\n\n  const renderNumberButton = (number) => (\n    <TouchableOpacity\n      key={number}\n      style={styles.numberButton}\n      onPress={() => handleNumberPress(number.toString())}\n    >\n      <Text style={styles.numberButtonText}>{number}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>{title}</Text>\n          \n          {/* Display */}\n          <View style={styles.display}>\n            <Text style={styles.displayText}>\n              {value || '0'}\n            </Text>\n          </View>\n\n          {/* Numpad */}\n          <View style={styles.numpad}>\n            {/* Row 1 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(1)}\n              {renderNumberButton(2)}\n              {renderNumberButton(3)}\n            </View>\n            \n            {/* Row 2 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(4)}\n              {renderNumberButton(5)}\n              {renderNumberButton(6)}\n            </View>\n            \n            {/* Row 3 */}\n            <View style={styles.numpadRow}>\n              {renderNumberButton(7)}\n              {renderNumberButton(8)}\n              {renderNumberButton(9)}\n            </View>\n            \n            {/* Row 4 */}\n            <View style={styles.numpadRow}>\n              <TouchableOpacity style={styles.actionButton} onPress={handleToggleSign}>\n                <Text style={styles.actionButtonText}>+/-</Text>\n              </TouchableOpacity>\n              \n              {renderNumberButton(0)}\n              \n              <TouchableOpacity style={styles.actionButton} onPress={handleBackspace}>\n                <Text style={styles.actionButtonText}>⌫</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          {/* Action Buttons */}\n          <View style={styles.actionButtons}>\n            <TouchableOpacity style={styles.cancelButton} onPress={onClose}>\n              <Text style={styles.cancelButtonText}>Anuluj</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n              <Text style={styles.submitButtonText}>OK</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = {\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 20,\n    width: '85%',\n    maxWidth: 350,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n    color: colors.text,\n  },\n  display: {\n    backgroundColor: '#F5F5F5',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  displayText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.primary,\n    minHeight: 40,\n  },\n  numpad: {\n    marginBottom: 20,\n  },\n  numpadRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  numberButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  numberButtonText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  actionButton: {\n    width: 70,\n    height: 70,\n    borderRadius: 35,\n    backgroundColor: colors.textLight,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  actionButtonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15,\n  },\n  cancelButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: colors.textLight,\n    alignItems: 'center',\n  },\n  cancelButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  submitButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    backgroundColor: colors.success,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default NumpadModal;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, Platform, Modal } from 'react-native';\nimport { globalStyles, colors } from '../styles/globalStyles';\nimport { updatePlayerStats, saveGame, updateGame } from '../services/dbInterface';\nimport NumpadModal from '../components/NumpadModal';\n\nconst GameScreenWeb = ({ navigation, route }) => {\n  const { gameData, resumeGame } = route.params;\n  \n  // Initialize players with proper state restoration\n  const initializePlayers = () => {\n    if (resumeGame && gameData.players) {\n      // When resuming, use the saved player data with scores and rounds\n      return gameData.players;\n    } else {\n      // New game, initialize fresh\n      return gameData.players;\n    }\n  };\n  \n  const [players, setPlayers] = useState(initializePlayers());\n  const [currentRound, setCurrentRound] = useState(resumeGame && gameData.currentRound ? gameData.currentRound : 1);\n  const [roundScores, setRoundScores] = useState({});\n  const [gameEnded, setGameEnded] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [numpadVisible, setNumpadVisible] = useState(false);\n  const [currentEditingPlayer, setCurrentEditingPlayer] = useState(null);\n  const [gameId, setGameId] = useState(resumeGame ? gameData.id : null);\n\n  useEffect(() => {\n    checkGameEnd();\n  }, [players]);\n\n  const checkGameEnd = async () => {\n    const playersOver101 = players.filter(player => player.totalScore >= 101);\n    if (playersOver101.length > 0) {\n      // Sort all players by score (ascending - lowest score wins)\n      const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n      \n      // Find the lowest score among all players\n      const lowestScore = sortedPlayers[0].totalScore;\n      const winners = sortedPlayers.filter(player => player.totalScore === lowestScore);\n      \n      // If there's only one winner, set them. If multiple winners (tie), set the first one but handle tie in statistics\n      setWinner(winners[0]);\n      setGameEnded(true);\n      \n      // Mark game as completed in database\n      if (gameId) {\n        try {\n          const finalGameState = {\n            players: sortedPlayers,\n            currentRound: currentRound,\n            lastUpdated: new Date().toISOString(),\n            finished: true\n          };\n          await updateGame(gameId, finalGameState, true); // Mark as completed\n          console.log('Game marked as completed');\n        } catch (error) {\n          console.error('Error marking game as completed:', error);\n        }\n      }\n      \n      // Update player statistics with proper tie handling\n      try {\n        let currentPlace = 1;\n        let previousScore = null;\n        let playersAtSamePlace = 0;\n        \n        for (let i = 0; i < sortedPlayers.length; i++) {\n          const player = sortedPlayers[i];\n          \n          // If this player has the same score as previous, they get the same place\n          if (previousScore !== null && player.totalScore !== previousScore) {\n            currentPlace += playersAtSamePlace;\n            playersAtSamePlace = 1;\n          } else {\n            playersAtSamePlace++;\n          }\n          \n          await updatePlayerStats(player.id, currentPlace);\n          previousScore = player.totalScore;\n        }\n        console.log('Player statistics updated successfully with tie handling');\n      } catch (error) {\n        console.error('Error updating player statistics:', error);\n      }\n    }\n  };\n\n  const updateRoundScore = (playerId, score) => {\n    // Handle negative values and empty strings\n    let numScore = 0;\n    if (score === '' || score === '-') {\n      numScore = 0;\n    } else {\n      numScore = parseInt(score) || 0;\n    }\n    \n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: numScore\n    }));\n  };\n\n  const openNumpad = (player) => {\n    setCurrentEditingPlayer(player);\n    setNumpadVisible(true);\n  };\n\n  const handleNumpadSubmit = (value) => {\n    if (currentEditingPlayer) {\n      updateRoundScore(currentEditingPlayer.id, value);\n      setCurrentEditingPlayer(null);\n    }\n  };\n\n  const submitRound = async () => {\n    // Validate all players have scores (including negative values)\n    const allScoresEntered = players.every(player => \n      roundScores[player.id] !== undefined\n    );\n\n    if (!allScoresEntered) {\n      if (Platform.OS === 'web') {\n        alert('Wprowadź wyniki dla wszystkich graczy!');\n      }\n      return;\n    }\n\n    // Update player scores (allow negative values)\n    const updatedPlayers = players.map(player => ({\n      ...player,\n      totalScore: player.totalScore + (roundScores[player.id] || 0),\n      rounds: [...player.rounds, roundScores[player.id] || 0]\n    }));\n\n    setPlayers(updatedPlayers);\n    setCurrentRound(currentRound + 1);\n    setRoundScores({});\n\n    // Save game state\n    try {\n      const gameState = {\n        players: updatedPlayers, // Save the complete updated player data\n        currentRound: currentRound + 1,\n        lastUpdated: new Date().toISOString()\n      };\n\n      if (gameId) {\n        await updateGame(gameId, gameState, false);\n      } else {\n        // For new games, save with the updated players as both the players and state\n        const newGameId = await saveGame(updatedPlayers, gameState, false);\n        setGameId(newGameId);\n      }\n      console.log('Game state saved successfully');\n    } catch (error) {\n      console.error('Error saving game state:', error);\n    }\n  };\n\n  const endGame = () => {\n    setModalVisible(true);\n  };\n\n  const confirmEndGame = async () => {\n    // Sort players by score for final ranking\n    const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n    \n    // Mark game as completed in database\n    if (gameId) {\n      try {\n        const finalGameState = {\n          players: sortedPlayers,\n          currentRound: currentRound,\n          lastUpdated: new Date().toISOString(),\n          finished: true\n        };\n        await updateGame(gameId, finalGameState, true); // Mark as completed\n        console.log('Game manually ended and marked as completed');\n      } catch (error) {\n        console.error('Error marking game as completed:', error);\n      }\n    }\n    \n    // Update player statistics if game wasn't already ended\n    if (!gameEnded) {\n      try {\n        let currentPlace = 1;\n        let previousScore = null;\n        let playersAtSamePlace = 0;\n        \n        for (let i = 0; i < sortedPlayers.length; i++) {\n          const player = sortedPlayers[i];\n          \n          // If this player has the same score as previous, they get the same place\n          if (previousScore !== null && player.totalScore !== previousScore) {\n            currentPlace += playersAtSamePlace;\n            playersAtSamePlace = 1;\n          } else {\n            playersAtSamePlace++;\n          }\n          \n          await updatePlayerStats(player.id, currentPlace);\n          previousScore = player.totalScore;\n        }\n        console.log('Player statistics updated successfully with tie handling');\n      } catch (error) {\n        console.error('Error updating player statistics:', error);\n      }\n    }\n    \n    if (Platform.OS === 'web') {\n      const resultText = sortedPlayers.map((player, index) => \n        `${index + 1}. ${player.name}: ${player.totalScore} pkt`\n      ).join('\\n');\n      \n      alert(`Gra zakończona!\\n\\nWyniki:\\n${resultText}`);\n    }\n    \n    navigation.goBack();\n  };\n\n  const renderPlayerCard = (player) => {\n    const isEliminated = player.totalScore >= 101;\n    \n    return (\n      <View key={player.id} style={[\n        styles.playerCard,\n        isEliminated && styles.eliminatedPlayerCard\n      ]}>\n        <View style={styles.playerHeader}>\n          <Text style={[\n            styles.playerName,\n            isEliminated && styles.eliminatedPlayerName\n          ]}>\n            {player.name}\n          </Text>\n          <Text style={[\n            styles.playerScore,\n            isEliminated && styles.eliminatedPlayerScore\n          ]}>\n            {player.totalScore} pkt\n          </Text>\n        </View>\n        \n        {!gameEnded && (\n          <View style={styles.scoreInputContainer}>\n            <Text style={styles.roundLabel}>Runda {currentRound}:</Text>\n            <TouchableOpacity\n              style={[\n                styles.scoreButton,\n                isEliminated && styles.eliminatedScoreButton\n              ]}\n              onPress={() => !isEliminated && openNumpad(player)}\n              disabled={isEliminated}\n            >\n              <Text style={[\n                styles.scoreButtonText,\n                isEliminated && styles.eliminatedScoreButtonText\n              ]}>\n                {roundScores[player.id] !== undefined ? roundScores[player.id].toString() : '0'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        {player.rounds.length > 0 && (\n          <View style={styles.roundHistory}>\n            <Text style={styles.roundHistoryTitle}>Historia rund:</Text>\n            <Text style={styles.roundHistoryText}>\n              {player.rounds.join(', ')}\n            </Text>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  if (gameEnded && winner) {\n    return (\n      <View style={[globalStyles.container, globalStyles.centered, { backgroundColor: colors.success }]}>\n        <Text style={styles.gameEndTitle}>🎉 Gra zakończona! 🎉</Text>\n        <Text style={styles.winnerText}>Zwycięzca: {winner.name}</Text>\n        <Text style={styles.winnerScore}>Wynik: {winner.totalScore} punktów</Text>\n        \n        <View style={styles.finalRanking}>\n          <Text style={styles.rankingTitle}>Końcowy ranking:</Text>\n          {(() => {\n            const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);\n            let currentPlace = 1;\n            let previousScore = null;\n            let playersAtSamePlace = 0;\n            \n            return sortedPlayers.map((player, index) => {\n              // Calculate proper place considering ties\n              if (previousScore !== null && player.totalScore !== previousScore) {\n                currentPlace += playersAtSamePlace;\n                playersAtSamePlace = 1;\n              } else {\n                playersAtSamePlace++;\n              }\n              \n              const displayPlace = currentPlace;\n              previousScore = player.totalScore;\n              \n              return (\n                <Text key={player.id} style={styles.rankingItem}>\n                  {displayPlace}. {player.name}: {player.totalScore} pkt\n                  {displayPlace === 1 && ' 🏆'}\n                  {displayPlace === 2 && ' 🥈'}\n                  {displayPlace === 3 && ' 🥉'}\n                </Text>\n              );\n            });\n          })()}\n        </View>\n        \n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Text style={styles.backButtonText}>🏠 Powrót do menu</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[globalStyles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.headerButton}>\n          <Text style={styles.headerButtonText}>← Powrót</Text>\n        </TouchableOpacity>\n        \n        <View style={styles.headerCenter}>\n          <Text style={styles.headerTitle}>🎮 Smoki</Text>\n          <Text style={styles.roundText}>Runda {currentRound}</Text>\n        </View>\n        \n        <TouchableOpacity onPress={endGame} style={styles.headerButton}>\n          <Text style={styles.headerButtonText}>Zakończ</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Players */}\n      <ScrollView style={styles.playersList} contentContainerStyle={{ padding: 20 }}>\n        {players.map(renderPlayerCard)}\n      </ScrollView>\n\n      {/* Submit Round Button */}\n      <View style={styles.submitButtonContainer}>\n        <TouchableOpacity \n          style={styles.submitButton}\n          onPress={submitRound}\n        >\n          <Text style={styles.submitButtonText}>\n            ✅ Zatwierdź rundę {currentRound}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* End Game Confirmation Modal */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Zakończyć grę?</Text>\n            <Text style={styles.modalText}>\n              Czy na pewno chcesz zakończyć grę w rundzie {currentRound}?\n            </Text>\n            \n            <View style={styles.modalButtons}>\n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.textLight }]}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={styles.modalButtonText}>Anuluj</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.modalButton, { backgroundColor: colors.danger }]}\n                onPress={confirmEndGame}\n              >\n                <Text style={[styles.modalButtonText, { color: 'white' }]}>\n                  Zakończ grę\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Numpad Modal */}\n      <NumpadModal\n        visible={numpadVisible}\n        onClose={() => {\n          setNumpadVisible(false);\n          setCurrentEditingPlayer(null);\n        }}\n        onSubmit={handleNumpadSubmit}\n        title={currentEditingPlayer ? `${currentEditingPlayer.name} - Runda ${currentRound}` : ''}\n        currentValue={currentEditingPlayer ? roundScores[currentEditingPlayer.id]?.toString() || '' : ''}\n      />\n    </View>\n  );\n};\n\nconst styles = {\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 60,\n    paddingBottom: 15,\n    backgroundColor: colors.primary,\n  },\n  headerButton: {\n    padding: 10,\n  },\n  headerButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  headerCenter: {\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  roundText: {\n    fontSize: 14,\n    color: 'white',\n    opacity: 0.9,\n  },\n  rulesContainer: {\n    backgroundColor: '#E3F2FD',\n    padding: 15,\n    marginHorizontal: 20,\n    marginTop: 10,\n    borderRadius: 10,\n  },\n  rulesText: {\n    fontSize: 14,\n    color: colors.text,\n    textAlign: 'center',\n  },\n  playersList: {\n    flex: 1,\n    marginTop: 10,\n  },\n  playerCard: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 15,\n    marginVertical: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  eliminatedPlayerCard: {\n    backgroundColor: '#FFEBEE',\n    opacity: 0.7,\n  },\n  playerHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  playerName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n  },\n  eliminatedPlayerName: {\n    color: colors.danger,\n    textDecorationLine: 'line-through',\n  },\n  playerScore: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.primary,\n  },\n  eliminatedPlayerScore: {\n    color: colors.danger,\n  },\n  scoreInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  roundLabel: {\n    fontSize: 16,\n    color: colors.text,\n    marginRight: 10,\n    flex: 1,\n  },\n  scoreButton: {\n    borderWidth: 2,\n    borderColor: colors.primary,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: colors.primary,\n    width: 80,\n    alignItems: 'center',\n  },\n  scoreButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  eliminatedScoreButton: {\n    backgroundColor: '#F5F5F5',\n    borderColor: colors.textLight,\n  },\n  eliminatedScoreButtonText: {\n    color: colors.textLight,\n  },\n  roundHistory: {\n    marginTop: 5,\n  },\n  roundHistoryTitle: {\n    fontSize: 12,\n    color: colors.textLight,\n    marginBottom: 2,\n  },\n  roundHistoryText: {\n    fontSize: 12,\n    color: colors.textLight,\n  },\n  submitButtonContainer: {\n    padding: 20,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  submitButton: {\n    backgroundColor: colors.success,\n    padding: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  gameEndTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  winnerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  winnerScore: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  finalRanking: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 20,\n    marginHorizontal: 20,\n    marginBottom: 30,\n  },\n  rankingTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: colors.text,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  rankingItem: {\n    fontSize: 16,\n    color: colors.text,\n    textAlign: 'center',\n    marginVertical: 3,\n  },\n  backButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 30,\n    paddingVertical: 15,\n    borderRadius: 25,\n    marginHorizontal: 40,\n  },\n  backButtonText: {\n    color: colors.success,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 30,\n    width: '80%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 15,\n    color: colors.text,\n  },\n  modalText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 25,\n    color: colors.textLight,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  modalButton: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n};\n\nexport default GameScreenWeb;\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React, { useState } from 'react';\nimport { Platform } from 'react-native';\nimport MainMenuScreenWeb from './src/screens/MainMenuScreenWeb';\nimport PlayersScreenWeb from './src/screens/PlayersScreenWeb';\nimport PlayerSelectionScreenWeb from './src/screens/PlayerSelectionScreenWeb';\nimport PlayerOrderScreenWeb from './src/screens/PlayerOrderScreenWeb';\nimport GameScreenWeb from './src/screens/GameScreenWeb';\n\n// Simple state-based navigation for web\nexport default function App() {\n  const [currentScreen, setCurrentScreen] = useState('MainMenu');\n  const [screenParams, setScreenParams] = useState({});\n  \n  console.log('App component rendering on:', Platform.OS, 'Current screen:', currentScreen);\n  \n  // Simple navigation object\n  const navigation = {\n    navigate: (screenName, params = {}) => {\n      console.log('Navigate to:', screenName, 'with params:', params);\n      setCurrentScreen(screenName);\n      setScreenParams(params);\n    },\n    goBack: () => {\n      console.log('Go back');\n      setCurrentScreen('MainMenu');\n      setScreenParams({});\n    }\n  };\n  \n  // Screen routing\n  switch (currentScreen) {\n    case 'Players':\n      return <PlayersScreenWeb navigation={navigation} />;\n    case 'PlayerSelection':\n      return <PlayerSelectionScreenWeb navigation={navigation} route={{ params: screenParams }} />;\n    case 'PlayerOrder':\n      return <PlayerOrderScreenWeb navigation={navigation} route={{ params: screenParams }} />;\n    case 'Game':\n      return <GameScreenWeb navigation={navigation} route={{ params: screenParams }} />;\n    case 'MainMenu':\n    default:\n      return <MainMenuScreenWeb navigation={navigation} />;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [513], () => (__webpack_require__(7936)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["colors","globalStyles","StyleSheet","create","container","flex","backgroundColor","centered","justifyContent","alignItems","padding","paddingTop","margin","shadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","card","borderRadius","marginVertical","button","paddingVertical","paddingHorizontal","buttonText","color","fontSize","fontWeight","secondaryButton","outlineButton","borderWidth","borderColor","outlineButtonText","textAlign","title","marginBottom","marginTop","subtitle","text","lineHeight","textInput","row","flexDirection","column","flex1","textCenter","textBold","storage","setItem","async","key","value","localStorage","error","console","getItem","removeItem","PLAYERS_KEY","GAMES_KEY","GAME_ROUNDS_KEY","webGetPlayers","players","JSON","parse","webGetGames","games","webGetGameRounds","rounds","getAllPlayers","updatePlayerStats","playerId","place","playerIndex","findIndex","p","id","totalGames","firstPlace","secondPlace","thirdPlace","stringify","success","updateGame","gameId","currentState","isCompleted","gameIndex","g","MainMenuScreenWeb","navigation","isLoading","setIsLoading","useState","hasActiveGame","setHasActiveGame","activeGameData","setActiveGameData","useEffect","initializeApp","checkForActiveGame","interval","setInterval","clearInterval","log","gameRounds","undefined","length","Promise","resolve","initDatabase","activeGame","find","game","Object","assign","getActiveGame","_jsx","View","style","children","Text","_jsxs","TouchableOpacity","minWidth","onPress","resumeGame","gameData","currentRound","navigate","styles","header","paddingBottom","backButton","backButtonText","addButton","addButtonText","playersList","playerCard","playerInfo","playerName","playerStats","playerActions","gap","actionButton","actionButtonText","emptyState","emptyStateText","modalOverlay","modalContent","maxWidth","modalTitle","modalButtons","modalButton","modalButtonText","PlayersScreenWeb","setPlayers","modalVisible","setModalVisible","editingPlayer","setEditingPlayer","setPlayerName","loadPlayers","playersData","handleDeletePlayer","confirm","filteredPlayers","filter","deletePlayer","goBack","ScrollView","contentContainerStyle","map","player","name","handleEditPlayer","Modal","visible","transparent","animationType","onRequestClose","TextInput","placeholder","onChangeText","autoFocus","trim","updatePlayer","newPlayer","Date","now","Error","push","addPlayer","alert","message","counterContainer","counterText","selectedSection","marginHorizontal","selectedTitle","selectedPlayersContainer","selectedPlayerChip","selectedPlayerChipText","selectedPlayerCard","selectedPlayerName","selectedPlayerStats","selectionIndicator","selectedIndicator","selectionText","addPlayersButton","addPlayersButtonText","startButtonContainer","startButton","startButtonText","PlayerSelectionScreenWeb","selectedPlayers","setSelectedPlayers","isSelected","togglePlayerSelection","startGame","shuffleButton","shuffleButtonText","instructionsContainer","instructionsText","orderPreview","orderPreviewTitle","orderPreviewText","orderNumber","marginRight","orderNumberText","moveButtons","moveButton","disabledButton","moveButtonText","disabledButtonText","tipsContainer","tipsTitle","tipsText","PlayerOrderScreenWeb","route","params","orderedPlayers","setOrderedPlayers","shufflePlayers","shuffled","i","j","Math","floor","random","index","join","renderPlayer","newOrder","movePlayerUp","disabled","movePlayerDown","order","totalScore","display","displayText","minHeight","numpad","numpadRow","numberButton","numberButtonText","actionButtons","cancelButton","cancelButtonText","submitButton","submitButtonText","NumpadModal","onClose","onSubmit","currentValue","setValue","React","renderNumberButton","number","handleNumberPress","toString","handleToggleSign","startsWith","substring","handleBackspace","slice","handleSubmit","headerButton","headerButtonText","headerCenter","headerTitle","roundText","opacity","rulesContainer","rulesText","eliminatedPlayerCard","playerHeader","eliminatedPlayerName","textDecorationLine","playerScore","eliminatedPlayerScore","scoreInputContainer","roundLabel","scoreButton","scoreButtonText","eliminatedScoreButton","eliminatedScoreButtonText","roundHistory","roundHistoryTitle","roundHistoryText","submitButtonContainer","gameEndTitle","winnerText","winnerScore","finalRanking","rankingTitle","rankingItem","modalText","GameScreenWeb","setCurrentRound","roundScores","setRoundScores","gameEnded","setGameEnded","winner","setWinner","numpadVisible","setNumpadVisible","currentEditingPlayer","setCurrentEditingPlayer","setGameId","checkGameEnd","sortedPlayers","sort","a","b","lowestScore","winners","finalGameState","lastUpdated","toISOString","finished","currentPlace","previousScore","playersAtSamePlace","displayPlace","endGame","isEliminated","openNumpad","every","updatedPlayers","gameState","newGameId","completedGames","newGame","createdAt","saveGame","resultText","updateRoundScore","score","numScore","parseInt","prev","registerRootComponent","currentScreen","setCurrentScreen","screenParams","setScreenParams","screenName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}